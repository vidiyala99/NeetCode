Valid Anagram
Solved 
Given two strings s and t, return true if the two strings are anagrams of each other, otherwise return false.

An anagram is a string that contains the exact same characters as another string, but the order of the characters can be different.

Example 1:

Input: s = "racecar", t = "carrace"

Output: true
Example 2:

Input: s = "jar", t = "jam"

Output: false
Constraints:

s and t consist of lowercase English letters.

Approach
Imagine you're counting how many of each letter appear in both words.
You create two "buckets" — one for each word — and for every letter, you drop it into its respective bucket.
At the end, if both buckets have the same count for every letter, then the words are true anagrams of each other.
If even one letter has a different count, they aren’t.

This method ensures you’re not relying on order, just on content and frequency.

class Solution:
    def isAnagram(self, s: str, t: str) -> bool:
        d1={}
        d2={}
        for i in s:
            if(i in d1):
                d1[i]+=1
            else:
                d1[i]=1
        for i in t:
            if(i in d2):
                d2[i]+=1
            else:
                d2[i]=1
        #l=[chr(x) for x in range(97,122)]
        return d1==d2
        